{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/dash/dash.component.css","webpack:///./src/app/dash/dash.component.html","webpack:///./src/app/dash/dash.component.ts","webpack:///./src/app/dues/dues.component.css","webpack:///./src/app/dues/dues.component.html","webpack:///./src/app/dues/dues.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/event/event.component.css","webpack:///./src/app/event/event.component.html","webpack:///./src/app/event/event.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/roster/roster.component.css","webpack:///./src/app/roster/roster.component.html","webpack:///./src/app/roster/roster.component.ts","webpack:///./src/app/schedule/schedule.component.css","webpack:///./src/app/schedule/schedule.component.html","webpack:///./src/app/schedule/schedule.component.ts","webpack:///./src/app/stripe-form/stripe-form.component.css","webpack:///./src/app/stripe-form/stripe-form.component.html","webpack:///./src/app/stripe-form/stripe-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#wrapper {\\n    margin: 30px;\\n}\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div id=\\\"wrapper\\\">\\n      \\n        <h3>Add Event to Schedule</h3>\\n        <hr>\\n        <span *ngIf=\\\"errors.length > 0\\\">\\n            <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                <div *ngFor=\\\"let error of errors\\\">\\n                   <strong>{{ error }}</strong> \\n                </div>\\n          </div>\\n        <hr>\\n        </span>\\n        \\n        <form (submit)=\\\"addEvent()\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-8\\\">\\n                  <label for=\\\"eventName\\\">Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Event Title\\\" name=\\\"event.title\\\" [(ngModel)]=\\\"event.title\\\">\\n              </div>\\n              <div class=\\\"form-group col-md-4\\\">\\n                  <label for=\\\"eventType\\\">Type</label>\\n                  <select class=\\\"form-control\\\" id=\\\"eventType\\\" name=\\\"event.type\\\" [(ngModel)]=\\\"event.type\\\">\\n                    <option selected>Event Type</option>\\n                    <option>Practice</option>\\n                    <option>Preseason</option>\\n                    <option>League</option>\\n                    <option>Playoffs</option>\\n                  </select>\\n              </div>\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-8\\\">\\n                    <label for=\\\"eventLocation\\\">Location</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventLocation\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Location Name\\\" name=\\\"event.location\\\" [(ngModel)]=\\\"event.location\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"startTime\\\">Date &amp; Time </label>\\n                    <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"startTime\\\" name=\\\"event.startTime\\\" [(ngModel)]=\\\"event.startTime\\\">\\n                </div>\\n              </div>\\n            \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress\\\">Address</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\" name=\\\"event.address.street\\\" [(ngModel)]=\\\"event.address.street\\\">\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"inputCity\\\">City</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\" name=\\\"event.address.city\\\" placeholder=\\\"City\\\" [(ngModel)]=\\\"event.address.city\\\">\\n              </div>\\n              <div class=\\\"form-group col-md-4\\\">\\n                <label for=\\\"inputState\\\">State</label>\\n                <select id=\\\"inputState\\\" class=\\\"form-control\\\" name=\\\"event.address.state\\\" placeholder=\\\"Select\\\" [(ngModel)]=\\\"event.address.state\\\">\\n                  <option selected>State</option>\\n                  <option>CA</option>\\n                  <option>NV</option>\\n                  <option>AZ</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-md-2\\\">\\n                <label for=\\\"inputZip\\\">Zip</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\" name=\\\"event.address.zip\\\" placeholder=\\\"Zipcode\\\" [(ngModel)]=\\\"event.address.zip\\\">\\n              </div>\\n            </div>\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Event</button>\\n          </form>\\n      \\n      </div>\\n\\n    </div>\\n\\n    \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  event: any;\n  errors: any;\n  authority: any;\n  \n  constructor(private _http: HttpService, private _router: Router) {\n    this._http.verifySession()\n   }\n\n  ngOnInit() {\n    this.event = {\n      title: '',\n      type: 'Event Type',\n      startTime: '',\n      address: {\n        street: '',\n        city: '',\n        state: 'State',\n        zip: ''\n      },\n      location: ''\n\n    }\n    this.errors = []\n    this.getUser()\n  }\n\n  addEvent(){\n    this._http.addEventService(this.event)\n      .subscribe(data=>{\n        console.log(data)\n        if (data['errors']){\n          this.errors = data['errors']\n          this.event = {\n            title: '',\n            type: 'Event Type',\n            startTime: '',\n            address: {\n              street: '',\n              city: '',\n              state: 'State',\n              zip: ''\n            },\n            location: ''\n      \n          }\n        if (data['_id']) {\n          console.log(\"else working\")\n          return this._router.navigate(['schedule'])\n        }\n      }\n    })\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n        this.authority = data['authority']\n        if (this.authority != 1){\n          return this._router.navigate(['home'])\n        }\n      })\n  }\n\n  logout(){\n    this._http.delSessionService()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashComponent } from './dash/dash.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RosterComponent } from './roster/roster.component';\nimport { ScheduleComponent } from './schedule/schedule.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { StripeFormComponent } from './stripe-form/stripe-form.component';\nimport { EventComponent } from './event/event.component';\nimport { EditComponent } from './edit/edit.component';\n\n/* const routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'chat', component: ChatComponent}\n];\n */\n/* const routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'home', component: HomeComponent, children:[\n    {path: '', component: DashComponent},\n    {path: 'chat', component: ChatComponent},\n    {path: 'profile', component: ProfileComponent},\n    {path: 'roster', component: RosterComponent}\n  ]}\n  \n]; */\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'home', component: DashComponent},\n  {path: 'chat', component: ChatComponent},\n  {path: 'profile', component: ProfileComponent},\n  {path: 'roster', component: RosterComponent},\n  {path: 'schedule', component: ScheduleComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'dues', component: StripeFormComponent},\n  {path: 'schedule/:id', component: EventComponent},\n  {path: 'schedule/:id/edit', component: EditComponent},\n  {path: '**', redirectTo: 'home'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* #wrapper {\\n    text-align: center;\\n    margin: 30px 0;\\n} */\\n\\n/* @media (min-width: 576px) { \\n    .hide-chat{\\n        display:hidden;\\n    }\\n } */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  paymentResponse: any;\n  public data:any=[]\n  id;\n\n\n    \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component'; \nimport { HttpService } from './http.service';\nimport { HomeComponent } from './home/home.component';\nimport { StorageServiceModule } from 'angular-webstorage-service';\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\nimport { DashComponent } from './dash/dash.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RosterComponent } from './roster/roster.component';\nimport { ScheduleComponent } from './schedule/schedule.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { DuesComponent } from './dues/dues.component';\nimport { StripeFormComponent } from './stripe-form/stripe-form.component';\nimport { EventComponent } from './event/event.component';\nimport { EditComponent } from './edit/edit.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashComponent,\n    ProfileComponent,\n    RosterComponent,\n    ScheduleComponent,\n    AdminComponent,\n    DuesComponent,\n    StripeFormComponent,\n    EventComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    StorageServiceModule,\n    NgxStripeModule.forRoot('pk_test_SikI4i4ruABOuhiuMasln93X'),\n    ReactiveFormsModule\n\n \n\n  ],\n  providers: [HttpService, CookieService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","module.exports = \".chatBox {\\n    min-height:400px;\\n    vertical-align: bottom;\\n    padding: 10px;\\n    font-size: .8em;\\n  }\\n.chat {\\n\\n}\\nform input:first-child {\\n    width: 90%;\\n    display: inline-block;\\n    border-radius: 0px;\\n    border-left: 0px;\\n    \\n}\\n.user {\\n    padding: 15px;\\n    font-size: .9em;\\n    line-height: .7em;\\n}\\nform input:last-child{\\n    display: inline-block;\\n    width: 10%;\\n    font-size: 1rem;\\n    margin-top: -3px;\\n    border-radius: 0;\\n}\\n@media (max-width: 992px) { \\n    form input:last-child{\\n        font-size:.7em;\\n        padding: .6rem 0;\\n    }\\n }\\n@media (max-width: 576px) { \\n    .hideUser{\\n        display: hidden;\\n    }\\n    form input:last-child{\\n        width: 70px;\\n        border-radius: 0px;\\n        margin-top: 3px;\\n    }\\n    form input:first-child {\\n        width: 100%;\\n        border-radius: 0px;\\n        border-left: 1px solid #ced4da;\\n        \\n    }\\n    .chatBox{\\n        border-left: 1px solid #ced4da;\\n    }\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  </div>\\n\\n\\n<div class=\\\"container\\\">\\n<div class=\\\"row no-gutters\\\">\\n\\n    <div class=\\\"col-3 d-none d-sm-block border\\\">\\n        <div class=\\\"user\\\">\\n          <h6>Users:</h6>\\n          <span *ngIf=\\\"users\\\">\\n            <p *ngFor=\\\"let user of users\\\">{{user}}</p>\\n          </span>\\n        </div>\\n    </div>\\n\\n  <div class=\\\"col\\\">\\n    <div class=\\\"pre-scrollable chatBox border-right \\\">\\n    <span *ngIf=\\\"messages.length > 0\\\">\\n\\n        <div *ngFor=\\\"let msg of messages\\\" class=\\\"font-weight-light align-text-bottom \\\">{{msg}}</div>\\n\\n    </span>\\n\\n  </div>\\n  <form (submit)=\\\"sendMessage()\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\">\\n      <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Send\\\">\\n  </form>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as io from 'socket.io-client';\n\nimport { HttpService } from '../http.service';\n\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, OnDestroy {\n  message;\n  socket;\n  messages;\n  user;\n  users;\n  connection;\n  authority;\n  constructor(private _http: HttpService){this._http.verifySession()}\n\n  ngOnInit() {\n\n      this.socket = io()\n      this.messages = []\n      this.message = \"\"\n      this.user = {\n        firstName: '',\n        lastName: '',\n      }\n      this.connection = {\n        socketID: this.socket.id, \n      }\n      console.log(\"New Chat User:\", this.connection)\n      this.users = []\n      this.getUser()\n      //Recieve new messages from group\n      this.socket.on('updateall', (data)=>{\n        console.log(data)\n        this.messages.unshift(data)\n      })\n\n      //Listening for new users to update users array\n      this.socket.on('addUser', ()=>{\n        this.getChat()\n      })\n\n      this.socket.on('removeUser', ()=>{\n        console.log('hello')\n        this.getChat() \n      })\n\n\n  }\n  ngOnDestroy(){\n    if(this.socket){\n      this.socket.emit('destroyed')\n    }\n  }\n\n  // Send Message on Submit\n  sendMessage(){\n    this.messages.unshift(this.user.firstName + ' ' + this.user.lastName + \": \" + this.message)\n    this.socket.emit('message', { msg: this.message, id: this.user.firstName + ' ' + this.user.lastName})\n    this.message = \"\";\n  }\n\n  // Get User\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n        this.user.firstName = data['firstName']\n        this.user.lastName = data['lastName']\n        this.authority = data['authority']\n        // After we get User name back, we emit new user to server with data\n        this.socket.emit('newUser', {'newUser': this.user.firstName + ' ' + this.user.lastName})\n      })\n  }\n\n  // Get Users in Chat\n  getChat(){\n    this._http.chatUsersService()\n      .subscribe(data=>{\n        console.log(this.users)\n        this.users = data['users']\n        console.log(\"Users in Chat:\", this.users)\n\n      })\n  }\n\n  logout(){\n    this._http.delSessionService()\n  }\n\n}\n","module.exports = \"\\n#wrapper {\\n    padding: 20px 0 ;\\n}\\n\\n\\n\\n.dark{\\n    background-color: #ffffff;\\n    padding-top: 25px;\\n    height: 100%;\\n}\\n\\n\\n\\n.jumbotron {\\n    margin-bottom: 0;\\n}\\n\\n\\n\\n.reduce {\\n    font-size: .8em;\\n    margin-left: 3px;\\n}\\n\\n\\n\\n/* @include media-breakpoint-up(xs) { ... }\\n@include media-breakpoint-up(sm) { ... }\\n@include media-breakpoint-up(md) { ... }\\n@include media-breakpoint-up(lg) { ... }\\n@include media-breakpoint-up(xl) { ... }\\n\\n// Example usage: */\\n\\n\\n\\n/* @include media-breakpoint-up(sm) {\\n    .hide-chat{\\n        display:hidden;\\n    }\\n} */\\n\\n\\n\\n/* @media (min-width: 576px) { \\n    .hide-chat{\\n        display:hidden;\\n    }\\n } */\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n      <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>   \\n  \\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n          </li>\\n          <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n            </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>\\n  </div>\\n\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row no-gutters\\\">\\n      <div class=\\\"col-md-8\\\">\\n          \\n          <div class=\\\"jumbotron\\\">\\n\\n            <h1 class=\\\"display-5\\\">Next Event</h1>\\n            <h3>{{event.type+\\\": \\\" +event.title}}</h3>\\n            <h6>{{event.startTime | date:'medium'}}</h6>\\n            <h5>{{event.location}}</h5>\\n            <p class=\\\"lead\\\">{{event.address.street+', '+event.address.city+', '+event.address.state+', '+event.address.zip}}</p>\\n          \\n            <hr class=\\\"my-4\\\">\\n            <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"/schedule\\\" role=\\\"button\\\">View Schedule</a>\\n          </div>\\n       </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"jumbotron dark border-right border-bottom border-left\\\">\\n          <div *ngIf=\\\"!profile\\\" class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n              Complete your <a href=\\\"/profile\\\">player profile</a> to be added to the roster!\\n              <br>\\n          </div>\\n        <h2 class=\\\"display-6\\\">Users in Chat</h2>\\n        <hr class=\\\"my-4\\\">\\n        <span *ngIf=\\\"users.length == 0\\\">\\n          <p class=\\\"text-monospace reduce\\\" >No Users in chat</p>\\n        </span>\\n        <span *ngIf=\\\"users.length > 0\\\">\\n          <span *ngFor=\\\"let user of users\\\">\\n            <p class=\\\"text-monospace reduce\\\">{{user}}</p>\\n          </span>\\n        </span>\\n      \\n        \\n  \\n        <p class=\\\"lead\\\">\\n          <a class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"['/chat']\\\" role=\\\"button\\\">Join Chat</a>\\n        </p>\\n      </div>\\n   </div>\\n   <!-- <div class=\\\"col-md-8 order-md-1\\\">\\n      <div class=\\\"jumbotron\\\">\\n        <h1 class=\\\"display-5\\\">Next Event</h1>\\n        <h3>{{event.type+\\\": \\\" +event.title}}</h3>\\n        <h6>{{event.startTime | date:'medium'}}</h6>\\n        <h5>{{event.location}}</h5>\\n        <p class=\\\"lead\\\">{{event.address.street+', '+event.address.city+', '+event.address.state+', '+event.address.zip}}</p>\\n      \\n        <hr class=\\\"my-4\\\">\\n        <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"/schedule\\\" role=\\\"button\\\">View Schedule</a>\\n      </div>\\n   </div> -->\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport * as io from 'socket.io-client';\n\n\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.css']\n})\nexport class DashComponent implements OnInit {\n  socket;\n  users: any;\n  user: any;\n  authority: any;\n  event: any;\n  profile: any;\n  constructor(\n    private _http: HttpService) {\n      this._http.verifySession()\n    }\n\n  ngOnInit() {\n    this.user = {\n      firstName: '',\n      lastName: '',\n    }\n    this.event = {\n      _id: '',\n      title: '',\n      type: '',\n      startTime: '',\n      location: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        zip: ''\n      }\n    }\n    this.users = []\n    this.socket = io()\n    this.getUser()\n    this.getEvent()\n    this.getChat()\n    this.socket.on('addUser', (data)=>{\n      this.getChat()\n        console.log(data)\n      })\n    this.socket.on('removeUser', (data)=>{\n      this.getChat()\n    })\n  }\n  getChat(){\n    this._http.chatUsersService()\n      .subscribe(data=>{\n        this.users = data['users']\n        console.log(this.users)\n\n      })\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n        this.user.firstName = data['firstName']\n        this.user.lastName = data['lastName']\n        this.authority = data['authority']\n        this.profile = data['completed']\n        \n      })\n  }\n\n  removeUser(){\n    this._http.removeUserService(this.user)\n      .subscribe(data => {\n        \n      })\n  }\n\n  logout(){\n    this._http.delSessionService()\n  }\n\n  getEvent(){\n    this._http.getLatestEventService()\n      .subscribe(data=>{\n        this.event = data[0]\n        console.log(this.event)\n        let weather = {\n          city: this.event.address.city,\n          date: this.event.startTime\n        }\n        /* this.getWeather(weather) */\n      })\n  }\n\n  getWeather(zipcode){\n    this._http.getWeatherService(zipcode)\n      .subscribe(data=>{\n        console.log(data)\n      })\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n    \\n<div class='container'>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\"></div>\\n    <div class=\\\"col-4\\\">\\n      <br>\\n        <h2>Pay Dues</h2>\\n        <hr>\\n   <!--  <form novalidate (ngSubmit)=\\\"buy($event)\\\" [formGroup]=\\\"stripeTest\\\">\\n      <input type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Jane Doe\\\">\\n      <div id=\\\"card-element\\\" class=\\\"field\\\"></div>\\n      <button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\">\\n        BUY\\n      </button>\\n    </form> -->\\n  </div>\\n  <div class=\\\"col\\\"></div>\\n</div>\\n\\n\\n</div>\\n\\n\\n\\n\\n\\n<!-- let creditCardParams = {\\n  customerId,\\n  number: '4111111111111111',\\n  expirationDate: '06/2022',\\n  cvv: '100'\\n};\\n -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\n\n\n \n@Component({\n  selector: 'app-dues',\n  templateUrl: './dues.component.html',\n  styleUrls: ['./dues.component.css']\n})\nexport class DuesComponent implements OnInit {\n  elements: Elements;\n  card: StripeElement;\n\n  // optional parameters\n  elementsOptions: ElementsOptions = {\n    locale: 'en'\n  };\n\n  stripeTest: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private stripeService: StripeService) {}\n\n  ngOnInit() {\n    this.stripeTest = this.fb.group({\n      name: ['', [Validators.required]]\n    });\n    this.stripeService.elements(this.elementsOptions)\n      .subscribe(elements => {\n        this.elements = elements;\n        // Only mount the element the first time\n        if (!this.card) {\n          this.card = this.elements.create('card', {\n            style: {\n              base: {\n                iconColor: '#666EE8',\n                color: '#31325F',\n                lineHeight: '40px',\n                fontWeight: 300,\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n                fontSize: '18px',\n                '::placeholder': {\n                  color: '#CFD7E0'\n                }\n              }\n            }\n          });\n          this.card.mount('#card-element');\n        }\n      });\n  }\n\n  buy() {\n    const name = this.stripeTest.get('name').value;\n    this.stripeService\n      .createToken(this.card, { name })\n      .subscribe(result => {\n        if (result.token) {\n          // Use the token to create a charge or a customer\n          // https://stripe.com/docs/charges\n          console.log(result.token);\n        } else if (result.error) {\n          // Error creating the token\n          console.log(result.error.message);\n        }\n      });\n  }\n  \n}","module.exports = \"#wrapper {\\n    margin: 30px;\\n}\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n      <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>   \\n  \\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n          </li>\\n          <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n            </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>\\n    \\n    <div id=\\\"wrapper\\\">\\n        \\n          <h3>Edit Event</h3>\\n          <hr>\\n          <span *ngIf=\\\"errors.length > 0\\\">\\n              <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                  <div *ngFor=\\\"let error of errors\\\">\\n                     <strong>{{ error }}</strong> \\n                  </div>\\n            </div>\\n          <hr>\\n          </span>\\n          \\n          <form (submit)=\\\"editEvent()\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-8\\\">\\n                    <label for=\\\"eventName\\\">Title</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Event Title\\\" name=\\\"event.title\\\" [(ngModel)]=\\\"event.title\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"eventType\\\">Type</label>\\n                    <select class=\\\"form-control\\\" id=\\\"eventType\\\" name=\\\"event.type\\\" [(ngModel)]=\\\"event.type\\\">\\n                      <option selected>Practice</option>\\n                      <option>Preseason</option>\\n                      <option>League</option>\\n                      <option>Playoffs</option>\\n                    </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-md-8\\\">\\n                      <label for=\\\"eventLocation\\\">Location</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"eventLocation\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Location Name\\\" name=\\\"event.location\\\" [(ngModel)]=\\\"event.location\\\">\\n                  </div>\\n                  <div class=\\\"form-group col-md-4\\\">\\n                      <label for=\\\"startTime\\\">Date &amp; Time </label>\\n                      <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"startTime\\\" name=\\\"event.startTime\\\" [(ngModel)]=\\\"event.startTime\\\">\\n                  </div>\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"inputAddress\\\">Address</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\" name=\\\"event.address.street\\\" [(ngModel)]=\\\"event.address.street\\\">\\n              </div>\\n  \\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                  <label for=\\\"inputCity\\\">City</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\" name=\\\"event.address.city\\\" [(ngModel)]=\\\"event.address.city\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                  <label for=\\\"inputState\\\">State</label>\\n                  <select id=\\\"inputState\\\" class=\\\"form-control\\\" name=\\\"event.address.state\\\" [(ngModel)]=\\\"event.address.state\\\">\\n                    <option selected>CA</option>\\n                    <option>NV</option>\\n                    <option>AZ</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group col-md-2\\\">\\n                  <label for=\\\"inputZip\\\">Zip</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\" name=\\\"event.address.zip\\\" [(ngModel)]=\\\"event.address.zip\\\">\\n                </div>\\n              </div>\\n  \\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Edit Event</button>\\n            </form>\\n        \\n        </div>\\n  \\n      </div>\\n  \\n      \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  event: any;\n  errors: any;\n  authority: any;\n  id: any;\n  \n  constructor(private _http: HttpService, private _route: ActivatedRoute, private _router: Router) {\n    this._http.verifySession()\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.id = params['id']\n    });\n  }\n\n  ngOnInit() {\n    this.event = {\n      _id: '',\n      title: '',\n      type: '',\n      startTime: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        zip: ''\n      },\n      location: ''\n\n    }\n    this.errors = []\n    this.getUser()\n    this.getEvent()\n  }\n\n  editEvent() {\n    this._http.updateEventService(this.event)\n      .subscribe(data=>{\n        console.log(data)\n        if(data['errors']){\n          this.errors = data['errors']\n          this.getEvent()\n        } \n        if (data['_id']){\n          return this._router.navigate(['schedule/'+this.event._id])\n        }\n      })\n    \n  }\n\n  getEvent() {\n    this._http.getEventService(this.id)\n      .subscribe(data=>{\n        this.event = data['event'];\n        this.event.startTime = data['date']\n      })\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n        this.authority = data['authority']\n        if (this.authority != 1){\n          return this._router.navigate(['home'])\n        }\n      })\n  }\n\n  logout(){\n    this._http.delSessionService()\n  }\n}\n","module.exports = \".margin-left {\\n    margin-left: 15px;\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  </div>\\n\\n<div id=\\\"wrapper\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"jumbotron\\\">\\n          <h1 class=\\\"display-5\\\">Event Details</h1>\\n          <hr>\\n          <h3>{{event.type+\\\": \\\" +event.title}}</h3>\\n        <h6>{{event.startTime | date:'medium'}}</h6>\\n        <h5>{{event.location}}</h5>\\n        <p class=\\\"lead\\\">{{event.address.street+', '+event.address.city+', '+event.address.state+', '+event.address.zip}}</p>\\n      \\n          <hr class=\\\"my-4\\\">\\n          <div *ngIf=\\\"authority == 1\\\">\\n            <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"/schedule/{{id}}/edit\\\" role=\\\"button\\\">Edit</a>  <button class=\\\"btn btn-danger btn-lg margin-left\\\" (click)=\\\"deleteEvent()\\\" >Delete</button>\\n          </div>\\n        </div>\\n   \\n  \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent implements OnInit {\n  event: any;\n  authority: any;\n  id: any;\n  constructor(private _http: HttpService, private _route: ActivatedRoute, private _router: Router) {\n    this._http.verifySession()\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.id = params['id']\n    });\n  }\n\n  ngOnInit() {\n    this.event = {\n      title: '',\n      type: '',\n      startTime: '',\n      location: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        zip: ''\n      }\n    }\n    this.getUser()\n    this.getEvent()\n  }\n\n  getEvent() {\n    this._http.getEventService(this.id)\n      .subscribe(data=>{\n        this.event = data['event'];\n        console.log(this.event);\n      })\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n\n        this.authority = data['authority']\n        \n      })\n  }\n  \n  deleteEvent(){\n    this._http.deleteEventService(this.id)\n      .subscribe(data=>{\n        console.log('deleted')\n        return this._router.navigate(['schedule'])\n      })\n  }\n}\n","module.exports = \"a:active {\\n\\n    color: #ffffff;\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MyRugbyUnion</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home/profile']\\\">Profile</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n      \\n    </div>\\n  </nav>\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { Router } from '@angular/router';\nimport { CookieService} from 'angular2-cookie/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private _http: HttpService,\n    private _router: Router,\n    private _cookie: CookieService) {\n      this._http.verifySession()\n     }\n\n  ngOnInit() {\n\n\n  }\n\n  logout(){\n    this._http.delSessionService()\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService} from 'angular2-cookie/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  id: any;\n  constructor(\n    private _http: HttpClient,\n    private _cookie: CookieService,\n    private _router: Router) { }\n\n  loginService(data){\n    return this._http.post('api/login', data)\n  }\n  registerService(data){\n    return this._http.post('api/register2', data)\n  }\n\n  setSessionService(id){\n    this.id = id\n    this._cookie.put('ID', this.id)\n    console.log(\"Session ID\", this.id)\n  }\n\n  delSessionService(){\n    this._cookie.remove('ID')\n    this._router.navigate([''])\n  }\n\n  verifySession(){\n    var verSess = this._cookie.get('ID')\n    if (!verSess){\n      return this._router.navigate(['']);\n    }\n    else {\n      console.log(\"Session ID\", verSess)\n    }\n  }\n\n  chatUsersService(){\n    return this._http.get('/api/userschat')\n  }\n\n  getUserService(){\n    var search = this._cookie.get('ID')\n    return this._http.get('/api/players/'+search)\n  }\n\n  removeUserService(user){\n    return this._http.post('/api/userschat', user)\n  }\n\n  updatePlayerService(data){\n    var search = this._cookie.get('ID')\n    return this._http.put('/api/updateplayer/'+search, data)\n  }\n\n  updateEventService(data){\n    return this._http.put('api/updatevent/'+data._id, data);\n  }\n\n  getPlayers(){\n    return this._http.get('/api/players')\n  }\n\n  addEventService(event){\n    return this._http.post('/api/events', event)\n  }\n  \n  getEventService(id){\n    return this._http.get('/api/event/'+id);\n  }\n\n  getScheduleService(){\n    return this._http.get('/api/schedule')\n  }\n  \n  getLatestEventService(){\n    return this._http.get('/api/latestevent')\n  }\n\n  getWeatherService(weather){\n    let date = Date.parse(weather.date)\n    return this._http.get('http://history.openweathermap.org/data/2.5/history/city?q='+weather.city+',us&type=hour&start='+date+'&cnt=1&appid=184f4974e12a5cb0bc1ead3e9857f362')\n  }\n\n\n\n  deleteEventService(id){\n    return this._http.get('/api/event/delete/'+id)\n  }\n}\n","module.exports = \"#wrapper {\\n    padding: 20px 0;\\n}\\n\\n\"","module.exports = \"<div id=\\\"wrapper\\\">\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\"></div>\\n    <div class=\\\"col-6\\\">\\n        \\n      <h2>MyRugbyUnion</h2>\\n      \\n      <hr>\\n      <span *ngIf=\\\"errors.length > 0\\\">\\n        <div *ngFor=\\\"let error of errors\\\">\\n          <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            <strong>{{ error }}</strong> \\n          </div>\\n        </div>\\n      </span>\\n      <form (submit)=\\\"login()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"loginEmail\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"loginEmail\\\" placeholder=\\\"Enter email\\\" name=\\\"user.email\\\" [(ngModel)]=\\\"user.email\\\">\\n           \\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"loginPassword\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"loginPassword\\\" placeholder=\\\"Password\\\" name=\\\"user.password\\\" [(ngModel)]=\\\"user.password\\\">\\n          </div>\\n         \\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"> Submit </button>\\n        </form>\\n        <hr>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm \\\" [routerLink]=\\\"['/register']\\\">New Player Registration</button>\\n      \\n        \\n      \\n    </div>\\n    <div class=\\\"col\\\"></div>\\n  </div>\\n\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: any;\n  errors: any;\n  constructor(private _http: HttpService, private _router: Router) { }\n\n  ngOnInit() {\n    this.user = {\n      email: '',\n      password: ''\n    }\n    this.errors = {}\n  }\n\n  login(){\n\n    this._http.loginService(this.user)\n      .subscribe(data=>{\n        if (data['error']){\n          console.log(data)\n          this.errors = data['error']\n          console.log(this.errors)\n        } else {\n          console.log(data)\n          this._http.setSessionService(data['_id'])\n          return this._router.navigate(['home'])\n        }\n        this.user = {\n          email: '',\n          password: ''\n        }\n      })\n    }\n}\n","module.exports = \"#wrapper {\\n    margin: 30px;\\n}\\n\\n#heightFeet {\\n    width: 60%;\\ndisplay:inline-block;\\n}\\n\\n.labelHeight {\\n   margin: 8px 0 0 10px;\\n   font-size: .8em;\\n   display: inline-block;\\n\\n}\\n\\n.spacing {\\n    margin-bottom: 10px;\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  </div>\\n\\n<div id=\\\"wrapper\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\"></div>\\n      <div class=\\\"col-lg-6\\\">\\n        <h3>Your Profile</h3>\\n        <form (submit)=\\\"updateUser()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regFirstName\\\">First Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"regFirstName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter First Name\\\" name=\\\"user.firstName\\\" [(ngModel)]=\\\"user.firstName\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regLastName\\\">Last Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"regLastName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"user.lastName\\\" [(ngModel)]=\\\"user.lastName\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleFormControlSelect1\\\">Position</label>\\n            <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" name=\\\"user.position\\\" [(ngModel)]=\\\"user.position\\\">\\n              <option>Prop</option>\\n              <option>Hooker</option>\\n              <option>Lock</option>\\n              <option>Flanker</option>\\n              <option>8 Man</option>\\n              <option>Scrum Half</option>\\n              <option>Fly Half </option>\\n              <option>Left Wing </option>\\n              <option>Inside Center </option>\\n              <option>Outside Center </option>\\n              <option>Right Wing</option>\\n              <option>Full Back</option>\\n            </select>\\n          </div>\\n          <label>Height</label>\\n          <div class=\\\"row no-gutters spacing\\\">\\n            \\n            <div class=\\\"col\\\">\\n             <input id=\\\"heightFeet\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Feet\\\" name='user.height.feet' [(ngModel)]='user.height.feet'>\\n             <span class=\\\"labelHeight\\\">FEET</span>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <input id=\\\"heightFeet\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Inches\\\" name='user.height.inches' [(ngModel)]='user.height.inches'>\\n              <span class=\\\"labelHeight\\\">INCHES</span> </div>\\n          </div>\\n          \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"weight\\\">Weight</label>\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"weight\\\" placeholder=\\\"Pounds\\\" name=\\\"user.weight\\\" [(ngModel)]=\\\"user.weight\\\">\\n    \\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"date\\\">Date of Birth</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" name=\\\"user.dob\\\" [(ngModel)]=\\\"user.dob\\\">\\n    \\n            </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n      </div>\\n      <div class=\\\"col\\\"></div>\\n    </div>\\n  \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any\n  constructor(private _http: HttpService, private _router: Router) {\n    this._http.verifySession()\n  }\n  authority: any\n  ngOnInit() {\n    this.authority = 0\n    this.user = {\n      firstName: '',\n      lastName: '',\n      position: '',\n      height: {\n        feet: '',\n        inches: ''\n      },\n      weight: '',\n      dob: Date\n    }\n    this.getUser()\n  }\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n        this.user.firstName = data['firstName']\n        this.user.lastName = data['lastName']\n        this.user.position = data['position']\n        this.user.height.feet = data['height']['feet']\n        this.user.height.inches = data['height']['inches']\n        this.user.weight = data['weight']\n        this.authority = data['authority']\n        console.log(\"AUTHORITY\", this.authority)\n        \n        var d = new Date(data['dob']),\n        month = '' + (d.getMonth() + 1),\n        day = '' + (d.getDate()+1),\n        year = d.getFullYear();\n\n        if (month.length < 2) month = '0' + month;\n        if (day.length < 2) day = '0' + day;\n\n        this.user.dob = [year, month, day].join('-')\n        \n        \n    /*     var date = new Date(data['dob'])\n        date.toLocaleDateString(year, month, day)\n        console.log(date) \n        console.log(date) */\n      })\n  }\n  updateUser(){\n    console.log(this.user)\n    this._http.updatePlayerService(this.user)\n      .subscribe(data=>{\n        console.log(data)\n        return this._router.navigate(['roster'])\n      })\n  }\n\n  logout(){\n    this._http.delSessionService()\n  }\n}\n","module.exports = \"#wrapper {\\n    padding: 20px 0;\\n}\"","module.exports = \"<div id=\\\"wrapper\\\">\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <h3>Registration</h3> \\n        <hr>\\n        <span *ngIf=\\\"errors.length > 0\\\">\\n\\n            <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                <div *ngFor=\\\"let error of errors\\\">\\n                   <strong>{{ error }}</strong> \\n                </div>\\n          </div>\\n        </span>\\n        <form (submit)=\\\"register()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regFirstName\\\">First Name</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"regFirstName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter First Name\\\" name=\\\"newUser.firstName\\\" [(ngModel)]=\\\"newUser.firstName\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regLastName\\\">Last Name</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"regLastName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Last Name\\\" name=\\\"newUser.lastName\\\" [(ngModel)]=\\\"newUser.lastName\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regEmail\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"regEmail\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" name=\\\"newUser.email\\\" [(ngModel)]=\\\"newUser.email\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regPassword\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"regPassword\\\" placeholder=\\\"Enter Password\\\" name=\\\"newUser.password\\\" [(ngModel)]=\\\"newUser.password\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"regConfPassword\\\">Confirm Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"regConfPassword\\\" placeholder=\\\"Confirm Password\\\" name=\\\"newUser.cPassword\\\" [(ngModel)]=\\\"newUser.cPassword\\\">\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n        <hr>\\n        <a href=\\\"/\\\"><button class=\\\"btn btn-link btn-sm\\\">Return</button></a>\\n      </div>\\n      <div class=\\\"col\\\"></div>\\n    </div>\\n    \\n  </div>\\n\\n</div>  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  errors: any;\n  newUser: any;\n  constructor(private _http: HttpService, private _router: Router) { }\n\n  ngOnInit() {\n    this.newUser = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      cPassword: ''\n      \n    }\n    this.errors = []\n  }\n\n\n  register(){\n\n    this._http.registerService(this.newUser)\n      .subscribe(data=>{\n        if(data['errors']){\n          console.log(data['errors'])\n          this.errors = data['errors']\n        }\n        else{\n           console.log(data)\n           this._http.setSessionService(data['_id'])\n           return this._router.navigate(['home'])\n           \n        }\n      });\n\n    this.newUser = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      cPassword: ''\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n \\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Position</th>\\n            <th scope=\\\"col\\\">Name</th>\\n\\n            <th scope=\\\"col\\\">Height</th>\\n            <th scope=\\\"col\\\">Weight</th>\\n            <th scope=\\\"col\\\">DOB</th>\\n            <th scope=\\\"col\\\">Email</th>\\n          </tr>\\n        </thead>\\n        <tbody  class=\\\"table-striped\\\">\\n          <tr *ngFor=\\\"let player of players\\\">\\n            <th *ngIf=\\\"player.completed\\\" scope=\\\"row\\\">{{player.position}}</th>\\n            <td *ngIf=\\\"player.completed\\\" >{{player.firstName + ' ' + player.lastName}}</td>\\n            <td *ngIf=\\\"player.completed\\\"><span *ngIf=\\\"player.height\\\">{{player.height.feet+\\\"' \\\"+player.height.inches+\\\"''\\\"}}</span></td>\\n            <td *ngIf=\\\"player.completed\\\"><span *ngIf=\\\"player.weight\\\">{{player.weight + 'lbs'}}</span></td>\\n            <td *ngIf=\\\"player.completed\\\"><span *ngIf=\\\"player.dob\\\">{{player.dob | date: 'mediumDate'}}</span></td>\\n            <td *ngIf=\\\"player.completed\\\">{{player.email}}</td>\\n \\n          </tr>\\n            \\n        </tbody>\\n      </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\n\n\n@Component({\n  selector: 'app-roster',\n  templateUrl: './roster.component.html',\n  styleUrls: ['./roster.component.css']\n})\nexport class RosterComponent implements OnInit {\n  players: any\n  authority: any\n  constructor(private _http: HttpService) {      this._http.verifySession() }\n\n  ngOnInit() {\n    this.players = []\n    this.getPlayers()\n    this.getUser()\n  }\n\n  getPlayers(){\n    this._http.getPlayers()\n      .subscribe(data=>{\n       this.players = data\n       console.log(data)\n      })\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n\n        this.authority = data['authority']\n        \n      })\n  }\n  logout(){\n    this._http.delSessionService()\n  }\n}\n","module.exports = \"#wrapper{\\n    margin: 20px 0;\\n}\\n.reduce {\\n    font-size: .8em;\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  </div>\\n\\n<div class=\\\"container\\\">\\n  \\n\\n  <div class=\\\"table-responsive reduce\\\">\\n \\n      <table class=\\\"table table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Date/Time</th>\\n              <th scope=\\\"col\\\">Title</th>\\n              <th scope=\\\"col\\\">Type</th>\\n              <th scope=\\\"col\\\">Location</th>\\n              <th scope=\\\"col\\\">Address</th>\\n\\n            </tr>\\n          </thead>\\n          <tbody  class=\\\"table-striped\\\">\\n            <tr *ngFor=\\\"let event of events\\\">\\n              <th scope=\\\"row\\\">{{event.startTime | date: 'short'}}</th>\\n              <td ><a href=\\\"/schedule/{{event._id}}\\\">{{event.title}}</a></td>\\n              <td>{{event.type}}</td>          \\n              <td>{{event.location}}</td>\\n              <td>{{event.address.street+', '+event.address.city+', '+event.address.state+', '+event.address.zip}}</td>\\n            </tr>\\n              \\n          </tbody>\\n        </table>\\n      </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.css']\n})\nexport class ScheduleComponent implements OnInit {\n  events;\n  authority;\n  constructor(private _http: HttpService) {this._http.verifySession()}\n\n  ngOnInit() {\n    this.events = []\n    this.getSchedule()\n    this.getUser()\n  }\n\n  getSchedule(){\n    this._http.getScheduleService()\n      .subscribe(data=>{\n        this.events = data\n      })\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n\n        this.authority = data['authority']\n        \n      })\n  }\n}\n","module.exports = \"#wrapper {\\n    margin: 30px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <h4><span class=\\\"badge badge-dark\\\" style=\\\"margin:10px 10px 0 0;\\\">MyRugbyUnion</span></h4>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>   \\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chat']\\\">Chat<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/roster']\\\">Roster<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/schedule']\\\">Schedule<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dues']\\\">Dues<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n        </li>\\n        <li *ngIf=\\\"authority == 1\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n          </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  </div>\\n\\n  <div class='container'>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">3 Months</h5>\\n                <p class=\\\"card-text\\\">Pay dues for the next 3 months: <strong>$45</strong></p>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"openCheckout45()\\\">Purchase</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                  <h5 class=\\\"card-title\\\">6 Months</h5>\\n                  <p class=\\\"card-text\\\">Pay dues for the next 6 months: <strong>$80</strong></p>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"openCheckout80()\\\">Purchase</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">12 Months</h5>\\n                    <p class=\\\"card-text\\\">Pay dues for the next 12 months: <strong>$150</strong></p>\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"openCheckout150()\\\">Purchase</button>\\n                </div>\\n              </div>\\n            </div>\\n        </div>\\n\\n\\n\\n    \\n    \\n    </div>\\n    \\n    \\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './../http.service';\n\n@Component({\n\n  selector: 'sd-stripe-form',\n  templateUrl: 'stripe-form.component.html',\n  styleUrls: ['stripe-form.component.css']\n})\n\nexport class StripeFormComponent  {\n  authority: any;\n\n  constructor(\n    private _http: HttpService) {\n      this._http.verifySession()\n      this.getUser()\n    }\n\n  openCheckout45() {\n    var handler = (<any>window).StripeCheckout.configure({\n      key: 'pk_test_oi0sKPJYLGjdvOXOM8tE8cMa',\n      locale: 'auto',\n      token: function (token: any) {\n        // You can access the token ID with `token.id`.\n        // Get the token ID to your server-side code for use.\n      }\n    });\n\n    handler.open({\n      name: 'Rugby Club Dues',\n      description: 'For 3 Months',\n      amount: 4500\n    });\n  }\n\n  openCheckout80() {\n    var handler = (<any>window).StripeCheckout.configure({\n      key: 'pk_test_oi0sKPJYLGjdvOXOM8tE8cMa',\n      locale: 'auto',\n      token: function (token: any) {\n        // You can access the token ID with `token.id`.\n        // Get the token ID to your server-side code for use.\n      }\n    });\n\n    handler.open({\n      name: 'Rugby Club Dues',\n      description: 'For 6 Months',\n      amount: 8000\n    });\n  }\n\n  openCheckout150() {\n    var handler = (<any>window).StripeCheckout.configure({\n      key: 'pk_test_oi0sKPJYLGjdvOXOM8tE8cMa',\n      locale: 'auto',\n      token: function (token: any) {\n        // You can access the token ID with `token.id`.\n        // Get the token ID to your server-side code for use.\n      }\n    });\n\n    handler.open({\n      name: 'Rugby Club Dues',\n      description: 'For 12 Months',\n      amount: 15000\n    });\n  }\n\n  getUser(){\n    this._http.getUserService()\n      .subscribe(data=>{\n        this.authority = data['authority']\n        \n      })\n  }\n  \n  logout(){\n    this._http.delSessionService()\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}