/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxBraintreeService } from './ngx-braintree.service';
import { ConfigureDropinService } from './configure-dropin.service';
import { NgxBraintreeComponent } from './ngx-braintree.component';
import { NgxBraintreeDirective } from './ngx-braintree.directive';
import { NgxBraintreePayDirective } from './ngx-braintree-pay.directive';
var NgxBraintreeModule = /** @class */ (function () {
    function NgxBraintreeModule() {
    }
    NgxBraintreeModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [
                        NgxBraintreeComponent,
                        NgxBraintreeDirective,
                        NgxBraintreePayDirective
                    ],
                    exports: [
                        NgxBraintreeComponent,
                        NgxBraintreePayDirective
                    ],
                    providers: [
                        { provide: NgxBraintreeService, useClass: NgxBraintreeService },
                        { provide: ConfigureDropinService, useClass: ConfigureDropinService }
                    ]
                },] },
    ];
    return NgxBraintreeModule;
}());
export { NgxBraintreeModule };
function NgxBraintreeModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    NgxBraintreeModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    NgxBraintreeModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWJyYWludHJlZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYnJhaW50cmVlLyIsInNvdXJjZXMiOlsibGliL25neC1icmFpbnRyZWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVwRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7Z0JBRXhFLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1oscUJBQXFCO3dCQUNyQixxQkFBcUI7d0JBQ3JCLHdCQUF3QjtxQkFDekI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHFCQUFxQjt3QkFDckIsd0JBQXdCO3FCQUN6QjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFFO3dCQUMvRCxFQUFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUU7cUJBQ3RFO2lCQUNGOzs2QkEzQkQ7O1NBNEJhLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBOZ3hCcmFpbnRyZWVTZXJ2aWNlIH0gZnJvbSAnLi9uZ3gtYnJhaW50cmVlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDb25maWd1cmVEcm9waW5TZXJ2aWNlIH0gZnJvbSAnLi9jb25maWd1cmUtZHJvcGluLnNlcnZpY2UnO1xyXG5cclxuaW1wb3J0IHsgTmd4QnJhaW50cmVlQ29tcG9uZW50IH0gZnJvbSAnLi9uZ3gtYnJhaW50cmVlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5neEJyYWludHJlZURpcmVjdGl2ZSB9IGZyb20gJy4vbmd4LWJyYWludHJlZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOZ3hCcmFpbnRyZWVQYXlEaXJlY3RpdmUgfSBmcm9tICcuL25neC1icmFpbnRyZWUtcGF5LmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBOZ3hCcmFpbnRyZWVDb21wb25lbnQsXHJcbiAgICBOZ3hCcmFpbnRyZWVEaXJlY3RpdmUsXHJcbiAgICBOZ3hCcmFpbnRyZWVQYXlEaXJlY3RpdmVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIE5neEJyYWludHJlZUNvbXBvbmVudCxcclxuICAgIE5neEJyYWludHJlZVBheURpcmVjdGl2ZVxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICB7IHByb3ZpZGU6IE5neEJyYWludHJlZVNlcnZpY2UsIHVzZUNsYXNzOiBOZ3hCcmFpbnRyZWVTZXJ2aWNlIH0sXHJcbiAgICB7IHByb3ZpZGU6IENvbmZpZ3VyZURyb3BpblNlcnZpY2UsIHVzZUNsYXNzOiBDb25maWd1cmVEcm9waW5TZXJ2aWNlIH1cclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hCcmFpbnRyZWVNb2R1bGUgeyB9XHJcbiJdfQ==