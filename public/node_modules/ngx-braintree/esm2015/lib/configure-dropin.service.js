/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
export class ConfigureDropinService {
    constructor() { }
    /**
     * @param {?} dropinConfig
     * @return {?}
     */
    configureCardHolderName(dropinConfig) {
        dropinConfig.card = {
            cardholderName: {
                required: true
            }
        };
    }
    /**
     * @param {?} dropinConfig
     * @param {?} chargeAmount
     * @param {?} currency
     * @return {?}
     */
    configurePaypalCheckout(dropinConfig, chargeAmount, currency) {
        dropinConfig.paypal = {
            flow: 'checkout',
            amount: chargeAmount,
            currency: currency
        };
    }
    /**
     * @param {?} dropinConfig
     * @return {?}
     */
    configurePaypalVault(dropinConfig) {
        dropinConfig.paypal = {
            flow: 'vault'
        };
    }
    /**
     * @param {?} dropinConfig
     * @param {?} locale
     * @return {?}
     */
    configureLocale(dropinConfig, locale) {
        dropinConfig.locale = locale;
    }
}
ConfigureDropinService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
ConfigureDropinService.ctorParameters = () => [];
function ConfigureDropinService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    ConfigureDropinService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    ConfigureDropinService.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJlLWRyb3Bpbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWJyYWludHJlZS8iLCJzb3VyY2VzIjpbImxpYi9jb25maWd1cmUtZHJvcGluLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTTtJQUVKLGlCQUFpQjs7Ozs7SUFFakIsdUJBQXVCLENBQUMsWUFBWTtRQUNsQyxZQUFZLENBQUMsSUFBSSxHQUFHO1lBQ2xCLGNBQWMsRUFBRTtnQkFDZCxRQUFRLEVBQUUsSUFBSTthQUNmO1NBQ0YsQ0FBQTtLQUNGOzs7Ozs7O0lBRUQsdUJBQXVCLENBQUMsWUFBWSxFQUFFLFlBQVksRUFBRSxRQUFRO1FBQzFELFlBQVksQ0FBQyxNQUFNLEdBQUc7WUFDcEIsSUFBSSxFQUFFLFVBQVU7WUFDaEIsTUFBTSxFQUFFLFlBQVk7WUFDcEIsUUFBUSxFQUFFLFFBQVE7U0FDbkIsQ0FBQTtLQUNGOzs7OztJQUVELG9CQUFvQixDQUFDLFlBQVk7UUFDL0IsWUFBWSxDQUFDLE1BQU0sR0FBRztZQUNwQixJQUFJLEVBQUUsT0FBTztTQUNkLENBQUE7S0FDRjs7Ozs7O0lBRUQsZUFBZSxDQUFDLFlBQVksRUFBRSxNQUFNO1FBQ2xDLFlBQVksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0tBQzlCOzs7WUE3QkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyZURyb3BpblNlcnZpY2Uge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBjb25maWd1cmVDYXJkSG9sZGVyTmFtZShkcm9waW5Db25maWcpOiB2b2lkIHtcclxuICAgIGRyb3BpbkNvbmZpZy5jYXJkID0ge1xyXG4gICAgICBjYXJkaG9sZGVyTmFtZToge1xyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbmZpZ3VyZVBheXBhbENoZWNrb3V0KGRyb3BpbkNvbmZpZywgY2hhcmdlQW1vdW50LCBjdXJyZW5jeSk6IHZvaWQge1xyXG4gICAgZHJvcGluQ29uZmlnLnBheXBhbCA9IHtcclxuICAgICAgZmxvdzogJ2NoZWNrb3V0JyxcclxuICAgICAgYW1vdW50OiBjaGFyZ2VBbW91bnQsXHJcbiAgICAgIGN1cnJlbmN5OiBjdXJyZW5jeVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY29uZmlndXJlUGF5cGFsVmF1bHQoZHJvcGluQ29uZmlnKSB7XHJcbiAgICBkcm9waW5Db25maWcucGF5cGFsID0ge1xyXG4gICAgICBmbG93OiAndmF1bHQnXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25maWd1cmVMb2NhbGUoZHJvcGluQ29uZmlnLCBsb2NhbGUpIHtcclxuICAgIGRyb3BpbkNvbmZpZy5sb2NhbGUgPSBsb2NhbGU7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=