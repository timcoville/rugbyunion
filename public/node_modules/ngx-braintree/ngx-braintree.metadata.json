{"__symbolic":"module","version":4,"metadata":{"NgxBraintreeService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":8,"character":28}]}],"getClientToken":[{"__symbolic":"method"}],"createPurchase":[{"__symbolic":"method"}]}},"NgxBraintreeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"ngx-braintree","template":"\n    <div *ngIf=\"showLoader\" style=\"position:relative; text-align: center;\">\n      <div #loaderRef><ng-content select=\".ngxLoader\" *ngIf=\"!hideLoader\"></ng-content></div>\n      <img *ngIf=\"loaderRef.children.length === 0 && !hideLoader\" src=\"{{loaderImage}}\" />\n    </div>\n    <div class=\"error\" *ngIf=\"errorMessage\">Error</div>\n    <div class=\"errorInfoDiv\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n    <div *ngIf=\"showDropinUI && clientToken\" ngxBraintreeDirective>\n      <div id=\"dropin-container\"></div>\n\n      <div #buttonsRef><ng-content select=\".ngxButtons\"></ng-content></div>\n\n      <!-- No buttons are projected and no styles sent, so the default button (Purchase) with default styles will be used. -->\n      <div *ngIf=\"(buttonsRef.children.length === 0 && !enabledStyle && !disabledStyle)\">\n          <button [disabled]=\"!enablePayButton\" *ngIf=\"showPayButton\" (click)=\"pay()\">\n            {{buttonText}}\n          </button>\n      </div>\n\n      <!-- No buttons are projected but styles are sent for the default button (Purchase). So, the sent styles will be used. -->\n      <div *ngIf=\"(buttonsRef.children.length === 0 && enabledStyle && disabledStyle)\">\n          <button [disabled]=\"!enablePayButton\" [ngStyle]=\"enablePayButton ? enabledStyle : disabledStyle\" *ngIf=\"showPayButton\" (click)=\"pay()\">\n            {{buttonText}}\n          </button>\n      </div>\n\n      <!-- Buttons are projected with no styles. -->\n      <!-- This is being handled via the directive. No styles will be applied as the user hasn't sent any styles. Default styles will not be applied. -->\n\n      <!-- Buttons are projected with styles -->\n      <!-- This is being handled via the directive. -->\n\n      \n    </div>\n    <div *ngIf=\"clientTokenNotReceived\">\n      <div class=\"error\">Error! Client token not received.</div>\n      <div class=\"errorInfoDiv\">Make sure your clientTokenURL's JSON response is as shown below:\n        <pre>{{ '{' }}\"token\":\"braintree_client_token_generated_on_your_server\"{{'}'}}</pre>\n      </div>\n    </div>","styles":["\n    button {\n      background-color: #009CDE;\n      color: #ffffff;\n      border: none;\n      border-radius: 4px;\n      height: 40px;\n      line-height: 40px;\n      font-size: 16px;\n      cursor: pointer;\n    }\n\n    button:disabled {\n      background-color: lightblue;\n      color: #ffffff;\n      border: none;\n      border-radius: 4px;\n      height: 40px;\n      line-height: 40px;\n      font-size: 16px;\n      cursor: not-allowed;\n    }\n\n    .error {\n      color: #ffffff;\n      background-color: red;\n      font-weight: bolder;\n      font-family: monospace;\n      border: none;\n      border-radius: 4px;\n      height: 30px;\n      line-height: 30px;\n    }\n\n    .errorInfoDiv {\n      border-bottom: 2px solid red;\n      border-left: 2px solid red;\n      border-right: 2px solid red;\n      font-family: monospace;\n    }"]}]}],"members":{"paymentStatus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":90,"character":3}}]}],"payButtonStatus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":91,"character":3}}]}],"clientTokenURL":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":93,"character":3}}]}],"createPurchaseURL":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":94,"character":3}}]}],"chargeAmount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":3}}]}],"buttonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":98,"character":3}}]}],"allowChoose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":99,"character":3}}]}],"showCardholderName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":100,"character":3}}]}],"enablePaypalCheckout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":101,"character":3}}]}],"enablePaypalVault":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":3}}]}],"currency":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":103,"character":3}}]}],"locale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":104,"character":3}}]}],"enabledStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":105,"character":3}}]}],"disabledStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":106,"character":3}}]}],"hideLoader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":107,"character":3}}]}],"getClientToken":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":3}}]}],"createPurchase":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":124,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgxBraintreeService"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":129,"character":31}]}],"ngOnInit":[{"__symbolic":"method"}],"generateDropInUI":[{"__symbolic":"method"}],"createDropin":[{"__symbolic":"method"}],"pay":[{"__symbolic":"method"}],"confirmPay":[{"__symbolic":"method"}]}},"NgxBraintreeModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":10,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":12,"character":4}],"declarations":[{"__symbolic":"reference","name":"NgxBraintreeComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"}],"exports":[{"__symbolic":"reference","name":"NgxBraintreeComponent"},{"__symbolic":"reference","name":"ɵc"}],"providers":[{"provide":{"__symbolic":"reference","name":"NgxBraintreeService"},"useClass":{"__symbolic":"reference","name":"NgxBraintreeService"}},{"provide":{"__symbolic":"reference","name":"ɵa"},"useClass":{"__symbolic":"reference","name":"ɵa"}}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"configureCardHolderName":[{"__symbolic":"method"}],"configurePaypalCheckout":[{"__symbolic":"method"}],"configurePaypalVault":[{"__symbolic":"method"}],"configureLocale":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":3,"character":1},"arguments":[{"selector":"[ngxBraintreeDirective]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":10,"character":44},"arguments":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DOCUMENT","line":10,"character":51}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":10,"character":32},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":3,"character":1},"arguments":[{"selector":"[ngxPay]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":11,"character":24},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":12,"character":22},{"__symbolic":"reference","name":"NgxBraintreeComponent"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}}},"origins":{"NgxBraintreeService":"./lib/ngx-braintree.service","NgxBraintreeComponent":"./lib/ngx-braintree.component","NgxBraintreeModule":"./lib/ngx-braintree.module","ɵa":"./lib/configure-dropin.service","ɵb":"./lib/ngx-braintree.directive","ɵc":"./lib/ngx-braintree-pay.directive"},"importAs":"ngx-braintree"}